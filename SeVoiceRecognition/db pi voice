//multiple tools testing for db
//referenced from google.youtube/user
//practical learning purpose. 
public void actionPerformed(ActionEvent event) {
        String command = event.getActionCommand();

        if (command.equals("Record")) {
            voiceReg.voiceRecord();
        }

        if (command.equals("Register")) {
            //createUserRecord();
            //clearUserRecord();
//          customerPanel.setVisible(true);

            try {
                Class.forName("org.h2.Driver");
                Connection connection = DriverManager.getConnection("jdbc:h2:~/test", "pi", "wise2k");
                String query = "insert into dataentry values(?,?,?,?,?,?)";
                PreparedStatement statement = connection.prepareStatement(query);
                statement.setString(1, name.getText());
                statement.setString(2, age.getText());
                statement.setString(3, couseApplied.getText());
                statement.setString(4, semester.getText());
                statement.setString(5, phone.getText());
                statement.setString(6, email.getText());
                statement.execute();

                JOptionPane.showMessageDialog(null, "data is added");
            }
            catch (ClassNotFoundException e) {
               e.printStackTrace();
            } catch (SQLException e) {
                e.printStackTrace();
            }


            if (command.equals("Clear")) {
                clearUserRecord();
            }
        }
    }

//https://docs.oracle.com/javase/tutorial/sound/converters.html

int totalFramesRead = 0;
File fileIn = new File(somePathName);
// somePathName is a pre-existing string whose value was
// based on a user selection.
try {
  AudioInputStream audioInputStream = 
    AudioSystem.getAudioInputStream(fileIn);
  int bytesPerFrame = 
    audioInputStream.getFormat().getFrameSize();
    if (bytesPerFrame == AudioSystem.NOT_SPECIFIED) {
    // some audio formats may have unspecified frame size
    // in that case we may read any amount of bytes
    bytesPerFrame = 1;
  } 
  // Set an arbitrary buffer size of 1024 frames.
  int numBytes = 1024 * bytesPerFrame; 
  byte[] audioBytes = new byte[numBytes];
  try {
    int numBytesRead = 0;
    int numFramesRead = 0;
    // Try to read numBytes bytes from the file.
    while ((numBytesRead = 
      audioInputStream.read(audioBytes)) != -1) {
      // Calculate the number of frames actually read.
      numFramesRead = numBytesRead / bytesPerFrame;
      totalFramesRead += numFramesRead;
      // Here, do something useful with the audio data that's 
      // now in the audioBytes array...
    }
  } catch (Exception ex) { 
    // Handle the error...
  }
} catch (Exception e) {
  // Handle the error...
}
